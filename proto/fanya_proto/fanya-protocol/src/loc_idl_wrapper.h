// Generated by the boleidlc.  DO NOT EDIT!

#ifndef LOC_IDL_WRAPPER_H_
#define LOC_IDL_WRAPPER_H_
#ifndef GOOGLE_PROTOBUF_INCLUDED_loc_2eproto
# include "loc.pb.h"
#endif
#include "message/proto/proto_msg.hpp"
#include "message/proto/proto_serializer.hpp"


namespace loc {
using Point3DMsg = hobot::message::ProtoMsg<Point3D>;
using Point3DMsgSerializer = hobot::message::ProtobufSerializer<Point3D>;

using padPointMsg = hobot::message::ProtoMsg<padPoint>;
using padPointMsgSerializer = hobot::message::ProtobufSerializer<padPoint>;

using padVehiclePoseMsg = hobot::message::ProtoMsg<padVehiclePose>;
using padVehiclePoseMsgSerializer = hobot::message::ProtobufSerializer<padVehiclePose>;

using VehiclePosMsg = hobot::message::ProtoMsg<VehiclePos>;
using VehiclePosMsgSerializer = hobot::message::ProtobufSerializer<VehiclePos>;

using App2emap_DRMsg = hobot::message::ProtoMsg<App2emap_DR>;
using App2emap_DRMsgSerializer = hobot::message::ProtobufSerializer<App2emap_DR>;

using parkingSlotsMsg = hobot::message::ProtoMsg<parkingSlots>;
using parkingSlotsMsgSerializer = hobot::message::ProtobufSerializer<parkingSlots>;

using laneLinesMsg = hobot::message::ProtoMsg<laneLines>;
using laneLinesMsgSerializer = hobot::message::ProtobufSerializer<laneLines>;

using stopLinesMsg = hobot::message::ProtoMsg<stopLines>;
using stopLinesMsgSerializer = hobot::message::ProtobufSerializer<stopLines>;

using bumpsMsg = hobot::message::ProtoMsg<bumps>;
using bumpsMsgSerializer = hobot::message::ProtobufSerializer<bumps>;

using arrowsMsg = hobot::message::ProtoMsg<arrows>;
using arrowsMsgSerializer = hobot::message::ProtobufSerializer<arrows>;

using crossWalksMsg = hobot::message::ProtoMsg<crossWalks>;
using crossWalksMsgSerializer = hobot::message::ProtobufSerializer<crossWalks>;

using MapInfoMsg = hobot::message::ProtoMsg<MapInfo>;
using MapInfoMsgSerializer = hobot::message::ProtobufSerializer<MapInfo>;

using LocStatusMsg = hobot::message::ProtoMsg<LocStatus>;
using LocStatusMsgSerializer = hobot::message::ProtobufSerializer<LocStatus>;

using padRealTimeLocationMsg = hobot::message::ProtoMsg<padRealTimeLocation>;
using padRealTimeLocationMsgSerializer = hobot::message::ProtobufSerializer<padRealTimeLocation>;

}  // namespace loc


#endif

