// Copyright (c) [2021-2023] [Horizon Robotics][Horizon Bole].
//
// You can use this software according to the terms and conditions of
// the Apache v2.0.
// You may obtain a copy of Apache v2.0. at:
//
//     http: //www.apache.org/licenses/LICENSE-2.0
//
// THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
// See Apache v2.0 for more details.

// This is error code definition.

#ifndef COMMUNICATION_COMMON_ERRORS_H_
#define COMMUNICATION_COMMON_ERRORS_H_

#ifndef DLLEXPORT
#if defined(_MSC_VER)
#define DLLEXPORT __declspec(dllexport)
#pragma warning(disable: 4251)
#else
#define DLLEXPORT
#endif
#endif

namespace hobot {
namespace communication {
constexpr int COMM_CODE_PREFIX{-1010000};

enum ErrorCode : int {
  COMM_CODE_OK = 0,
  // 1011xxx, common error (connection/discovery etc.)
  COMM_CODE_CONNECT_FAILED = -1000 + COMM_CODE_PREFIX,
  COMM_CODE_FILE_NAME_INVALID = -1001 + COMM_CODE_PREFIX,
  COMM_CODE_CONFIG_INVALID = -1002 + COMM_CODE_PREFIX,
  COMM_CODE_UNSUPPORTED_PROTOCOL = -1003 + COMM_CODE_PREFIX,
  COMM_CODE_COMM_ATTR_INVALID = -1004 + COMM_CODE_PREFIX,
  COMM_CODE_MESSAGE_NULL = -1005 + COMM_CODE_PREFIX,
  COMM_CODE_MESSAGE_SERIALIZE_FAILED = -1006 + COMM_CODE_PREFIX,
  COMM_CODE_UNINITIALIZED = -1007 + COMM_CODE_PREFIX,
  COMM_CODE_INIT_FAILED = -1008 + COMM_CODE_PREFIX,
  //  COMM_CODE_UNINITIALIZED_WITH_FILE = -1009 + COMM_CODE_PREFIX,
  COMM_CODE_INIT_IS_ALREADY = -1010 + COMM_CODE_PREFIX,
  COMM_CODE_PARAM_IS_NULL = -1011 + COMM_CODE_PREFIX,
  //  COMM_CODE_INIT_IS_ALREADY_WITH_FILE = -1012 + COMM_CODE_PREFIX,
  //  COMM_CODE_INIT_IS_ALREADY_WITHOUT_FILE = -1013 + COMM_CODE_PREFIX,
  COMM_CODE_DISCOVERY_INIT_FAILED = -1014 + COMM_CODE_PREFIX,
  COMM_CODE_DYNAMIC_CAST_MSG_FAILED = -1015 + COMM_CODE_PREFIX,
  COMM_CODE_RELIABLE_SEND_TIMEOUT  = -1016 + COMM_CODE_PREFIX,
  COMM_CODE_QOS_PARAM_INVALID = -1017 + COMM_CODE_PREFIX,
  // 1012xxx, pub-sub error
  COMM_CODE_PUB_TIMEOUT = -2000 + COMM_CODE_PREFIX,
  COMM_CODE_TOPIC_CLOSE = -2001 + COMM_CODE_PREFIX,
  COMM_CODE_NOT_FOUND_RELATED_SUB = -2002 + COMM_CODE_PREFIX,
  COMM_CODE_TOPIC_NAME_INVALID = -2003 + COMM_CODE_PREFIX,
  COMM_CODE_CREATE_NEW_EXECUTOR_FAILED = -2004 + COMM_CODE_PREFIX,
  COMM_CODE_ILLEGAL_INVOCATION = -2005 + COMM_CODE_PREFIX,
  // 1013XXX, client-service error
  COMM_CODE_CLIENT_TIMEOUT = -3000 + COMM_CODE_PREFIX,
  COMM_CODE_CLIENT_SEND_FAILED = -3001 + COMM_CODE_PREFIX,
  COMM_CODE_SERVICE_NAME_INVALID = -3002 + COMM_CODE_PREFIX,
  // 1014xxx, action error
  COMM_CODE_ACTION_CLIENT_TIMEOUT = -4000 + COMM_CODE_PREFIX,
  COMM_CODE_ACTION_NAME_INVALID = -4001 + COMM_CODE_PREFIX,
  // for wait set error
  COMM_CODE_WAITSET_EMPTY = -5000 + COMM_CODE_PREFIX,
  COMM_CODE_WAITSET_TIMEOUT = -5001 + COMM_CODE_PREFIX,
  COMM_CODE_WAITSET_SOMETHING_ELSE_WRONG = -5002 + COMM_CODE_PREFIX,
  COMM_CODE_WAITSET_INVALID_PARAM = -5003 + COMM_CODE_PREFIX,
  COMM_CODE_WAITSET_ALREADY_EXIST = -5004 + COMM_CODE_PREFIX,
  COMM_CODE_WAITSET_ALREADY_IN_USE = -5005 + COMM_CODE_PREFIX,
  COMM_CODE_WAITSET_DO_NOT_EXIST = -5006 + COMM_CODE_PREFIX,
  // for plugin error
  COMM_CODE_PLUGIN_LOAD_FAIL = -6000 + COMM_CODE_PREFIX,
  COMM_CODE_PLUGIN_UNLOAD_FAIL = -6001 + COMM_CODE_PREFIX,
  COMM_CODE_PLUGIN_UP_PROPERTY_FAIL = -6002 + COMM_CODE_PREFIX,
  COMM_CODE_PLUGIN_GET_PROPERTY_FAIL = -6003 + COMM_CODE_PREFIX,
};

DLLEXPORT const char *ErrorMsg(ErrorCode code);

}  // namespace communication
}  // namespace hobot

#endif  // COMMUNICATION_COMMON_ERRORS_H_
